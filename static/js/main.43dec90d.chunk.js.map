{"version":3,"sources":["component/Firstpro.js","App.js","reportWebVitals.js","index.js"],"names":["Firstpro","state","input","items","handleChange","event","setState","target","value","storeItems","preventDefault","deleteItem","key","filter","data","index","this","className","onSubmit","type","onChange","placeholder","map","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAEqBA,G,kNACjBC,MAAM,CACFC,MAAO,IACPC,MAAM,I,EAEVC,aAAa,SAACC,GACN,EAAKC,SAAS,CACVJ,MAAOG,EAAME,OAAOC,S,EAIhCC,WAAa,SAACJ,GACVA,EAAMK,iBADc,IAEbR,EAAQ,EAAKD,MAAbC,MAEP,EAAKI,SAAS,CACVH,MAAK,sBAAO,EAAKF,MAAME,OAAlB,CAAwBD,IAC7BA,MAAO,M,EAIfS,WAAW,SAACC,GACR,EAAKN,SAAS,CACVH,MAAO,EAAKF,MAAME,MAAMU,QAAO,SAACC,EAAKC,GAAN,OAAcA,IAAQH,Q,uDAInD,IAAD,SACgBI,KAAKf,MAAnBC,EADF,EACEA,MAAMC,EADR,EACQA,MAEb,OACI,sBAAKc,UAAU,qBAAf,UACI,uBAAMA,UAAU,gBAAgBC,SAAUF,KAAKP,WAA/C,UACI,kDACA,uBAAOU,KAAK,OAAOX,MAAON,EAAOkB,SAAUJ,KAAKZ,aAAciB,YAAY,qBAE9E,6BACKlB,EAAMmB,KAAI,SAACR,EAAKC,GAAN,OACP,+BACKD,EAAK,mBAAGG,UAAU,mBAAmBM,QAAS,kBAAI,EAAKZ,WAAWI,QAD9DA,e,GAtCKS,cCYvBC,E,uKARX,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUO,aCQHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.43dec90d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./Firstpro.css\"\r\nexport default class Firstpro extends Component {\r\n    state={\r\n        input: \" \",\r\n        items:[]\r\n    }\r\n    handleChange=(event)=>{\r\n            this.setState({\r\n                input: event.target.value\r\n            });\r\n    };\r\n    \r\n    storeItems = (event) => {\r\n        event.preventDefault();\r\n        const{ input }=this.state;\r\n\r\n        this.setState({\r\n            items : [...this.state.items,input],\r\n            input: \"\"\r\n        });\r\n    };\r\n\r\n    deleteItem=(key)=>{\r\n        this.setState({\r\n            items: this.state.items.filter((data,index)=>index!==key)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const{ input,items }=this.state;\r\n\r\n        return (\r\n            <div className=\"firstpro-container\">\r\n                <form className=\"input-section\" onSubmit={this.storeItems}>\r\n                    <h1>Please Add Items</h1>\r\n                    <input type=\"text\" value={input} onChange={this.handleChange} placeholder=\"Enter items..\"/>\r\n                </form>\r\n                <ul>\r\n                    {items.map((data,index)=>(\r\n                        <li key={index}>\r\n                            {data}<i className=\"fas fa-trash-alt\" onClick={()=>this.deleteItem(index)}></i>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport Firstpro from \"./component/Firstpro\";\n\n\nclass App extends Component{\n  render(){\n    return(\n      <div className=\"App\">\n        <Firstpro/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}